//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClienteTest.ClienteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/ClienteService")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Clientes_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DireccionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DniField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserpassField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellidos {
            get {
                return this.ApellidosField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidosField, value) != true)) {
                    this.ApellidosField = value;
                    this.RaisePropertyChanged("Apellidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Clientes_id {
            get {
                return this.Clientes_idField;
            }
            set {
                if ((this.Clientes_idField.Equals(value) != true)) {
                    this.Clientes_idField = value;
                    this.RaisePropertyChanged("Clientes_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direccion {
            get {
                return this.DireccionField;
            }
            set {
                if ((object.ReferenceEquals(this.DireccionField, value) != true)) {
                    this.DireccionField = value;
                    this.RaisePropertyChanged("Direccion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dni {
            get {
                return this.DniField;
            }
            set {
                if ((object.ReferenceEquals(this.DniField, value) != true)) {
                    this.DniField = value;
                    this.RaisePropertyChanged("Dni");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Userpass {
            get {
                return this.UserpassField;
            }
            set {
                if ((object.ReferenceEquals(this.UserpassField, value) != true)) {
                    this.UserpassField = value;
                    this.RaisePropertyChanged("Userpass");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClienteService.IClienteService")]
    public interface IClienteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/Insert", ReplyAction="http://tempuri.org/IClienteService/InsertResponse")]
        string Insert(ClienteTest.ClienteService.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/Insert", ReplyAction="http://tempuri.org/IClienteService/InsertResponse")]
        System.Threading.Tasks.Task<string> InsertAsync(ClienteTest.ClienteService.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/Update", ReplyAction="http://tempuri.org/IClienteService/UpdateResponse")]
        ClienteTest.ClienteService.Cliente Update(ClienteTest.ClienteService.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/Update", ReplyAction="http://tempuri.org/IClienteService/UpdateResponse")]
        System.Threading.Tasks.Task<ClienteTest.ClienteService.Cliente> UpdateAsync(ClienteTest.ClienteService.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/FindCliente", ReplyAction="http://tempuri.org/IClienteService/FindClienteResponse")]
        ClienteTest.ClienteService.Cliente FindCliente(int clientes_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/FindCliente", ReplyAction="http://tempuri.org/IClienteService/FindClienteResponse")]
        System.Threading.Tasks.Task<ClienteTest.ClienteService.Cliente> FindClienteAsync(int clientes_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/Delete", ReplyAction="http://tempuri.org/IClienteService/DeleteResponse")]
        string Delete(int clientes_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClienteService/Delete", ReplyAction="http://tempuri.org/IClienteService/DeleteResponse")]
        System.Threading.Tasks.Task<string> DeleteAsync(int clientes_id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClienteServiceChannel : ClienteTest.ClienteService.IClienteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClienteServiceClient : System.ServiceModel.ClientBase<ClienteTest.ClienteService.IClienteService>, ClienteTest.ClienteService.IClienteService {
        
        public ClienteServiceClient() {
        }
        
        public ClienteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClienteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Insert(ClienteTest.ClienteService.Cliente cliente) {
            return base.Channel.Insert(cliente);
        }
        
        public System.Threading.Tasks.Task<string> InsertAsync(ClienteTest.ClienteService.Cliente cliente) {
            return base.Channel.InsertAsync(cliente);
        }
        
        public ClienteTest.ClienteService.Cliente Update(ClienteTest.ClienteService.Cliente cliente) {
            return base.Channel.Update(cliente);
        }
        
        public System.Threading.Tasks.Task<ClienteTest.ClienteService.Cliente> UpdateAsync(ClienteTest.ClienteService.Cliente cliente) {
            return base.Channel.UpdateAsync(cliente);
        }
        
        public ClienteTest.ClienteService.Cliente FindCliente(int clientes_id) {
            return base.Channel.FindCliente(clientes_id);
        }
        
        public System.Threading.Tasks.Task<ClienteTest.ClienteService.Cliente> FindClienteAsync(int clientes_id) {
            return base.Channel.FindClienteAsync(clientes_id);
        }
        
        public string Delete(int clientes_id) {
            return base.Channel.Delete(clientes_id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteAsync(int clientes_id) {
            return base.Channel.DeleteAsync(clientes_id);
        }
    }
}
